
package no.nav.generated.vmware.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "VSOWebControl", targetNamespace = "http://webservice.vso.dunes.ch")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface VSOWebControl {


    /**
     * 
     * @param username
     * @param query
     * @param type
     * @param password
     * @return
     *     returns no.nav.QueryResult
     */
    @WebMethod
    @WebResult(name = "findReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "find", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.Find")
    @ResponseWrapper(localName = "findResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.FindResponse")
    public QueryResult find(
        @WebParam(name = "type", targetNamespace = "http://webservice.vso.dunes.ch")
        String type,
        @WebParam(name = "query", targetNamespace = "http://webservice.vso.dunes.ch")
        String query,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param message
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "echoReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "echo", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.Echo")
    @ResponseWrapper(localName = "echoResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.EchoResponse")
    public String echo(
        @WebParam(name = "message", targetNamespace = "http://webservice.vso.dunes.ch")
        String message);

    /**
     * 
     * @param workflowMessage
     * @return
     *     returns no.nav.Workflow
     */
    @WebMethod
    @WebResult(name = "echoWorkflowReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "echoWorkflow", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.EchoWorkflow")
    @ResponseWrapper(localName = "echoWorkflowResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.EchoWorkflowResponse")
    public Workflow echoWorkflow(
        @WebParam(name = "workflowMessage", targetNamespace = "http://webservice.vso.dunes.ch")
        Workflow workflowMessage);

    /**
     * 
     * @param serializedProperties
     * @param eventName
     */
    @WebMethod
    @RequestWrapper(localName = "sendCustomEvent", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.SendCustomEvent")
    @ResponseWrapper(localName = "sendCustomEventResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.SendCustomEventResponse")
    public void sendCustomEvent(
        @WebParam(name = "eventName", targetNamespace = "http://webservice.vso.dunes.ch")
        String eventName,
        @WebParam(name = "serializedProperties", targetNamespace = "http://webservice.vso.dunes.ch")
        String serializedProperties);

    /**
     * 
     * @param username
     * @param workflowId
     * @param password
     * @return
     *     returns no.nav.Workflow
     */
    @WebMethod
    @WebResult(name = "getWorkflowForIdReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "getWorkflowForId", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowForId")
    @ResponseWrapper(localName = "getWorkflowForIdResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowForIdResponse")
    public Workflow getWorkflowForId(
        @WebParam(name = "workflowId", targetNamespace = "http://webservice.vso.dunes.ch")
        String workflowId,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param username
     * @param password
     * @return
     *     returns java.util.List<no.nav.Workflow>
     */
    @WebMethod
    @WebResult(name = "getAllWorkflowsReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "getAllWorkflows", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetAllWorkflows")
    @ResponseWrapper(localName = "getAllWorkflowsResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetAllWorkflowsResponse")
    public List<Workflow> getAllWorkflows(
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param username
     * @param workflowName
     * @param password
     * @return
     *     returns java.util.List<no.nav.Workflow>
     */
    @WebMethod
    @WebResult(name = "getWorkflowsWithNameReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "getWorkflowsWithName", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowsWithName")
    @ResponseWrapper(localName = "getWorkflowsWithNameResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowsWithNameResponse")
    public List<Workflow> getWorkflowsWithName(
        @WebParam(name = "workflowName", targetNamespace = "http://webservice.vso.dunes.ch")
        String workflowName,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param username
     * @param workflowInputs
     * @param workflowId
     * @param password
     * @return
     *     returns no.nav.WorkflowToken
     */
    @WebMethod
    @WebResult(name = "executeWorkflowReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "executeWorkflow", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.ExecuteWorkflow")
    @ResponseWrapper(localName = "executeWorkflowResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.ExecuteWorkflowResponse")
    public WorkflowToken executeWorkflow(
        @WebParam(name = "workflowId", targetNamespace = "http://webservice.vso.dunes.ch")
        String workflowId,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password,
        @WebParam(name = "workflowInputs", targetNamespace = "http://webservice.vso.dunes.ch")
        List<WorkflowTokenAttribute> workflowInputs);

    /**
     * 
     * @param in2
     * @param in1
     * @param in3
     * @param in0
     * @return
     *     returns no.nav.WorkflowToken
     */
    @WebMethod
    @WebResult(name = "simpleExecuteWorkflowReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "simpleExecuteWorkflow", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.SimpleExecuteWorkflow")
    @ResponseWrapper(localName = "simpleExecuteWorkflowResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.SimpleExecuteWorkflowResponse")
    public WorkflowToken simpleExecuteWorkflow(
        @WebParam(name = "in0", targetNamespace = "http://webservice.vso.dunes.ch")
        String in0,
        @WebParam(name = "in1", targetNamespace = "http://webservice.vso.dunes.ch")
        String in1,
        @WebParam(name = "in2", targetNamespace = "http://webservice.vso.dunes.ch")
        String in2,
        @WebParam(name = "in3", targetNamespace = "http://webservice.vso.dunes.ch")
        String in3);

    /**
     * 
     * @param username
     * @param password
     * @param workflowTokenId
     */
    @WebMethod
    @RequestWrapper(localName = "cancelWorkflow", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.CancelWorkflow")
    @ResponseWrapper(localName = "cancelWorkflowResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.CancelWorkflowResponse")
    public void cancelWorkflow(
        @WebParam(name = "workflowTokenId", targetNamespace = "http://webservice.vso.dunes.ch")
        String workflowTokenId,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param username
     * @param password
     * @param workflowTokenId
     * @return
     *     returns java.util.List<no.nav.WorkflowTokenAttribute>
     */
    @WebMethod
    @WebResult(name = "getWorkflowTokenResultReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "getWorkflowTokenResult", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowTokenResult")
    @ResponseWrapper(localName = "getWorkflowTokenResultResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowTokenResultResponse")
    public List<WorkflowTokenAttribute> getWorkflowTokenResult(
        @WebParam(name = "workflowTokenId", targetNamespace = "http://webservice.vso.dunes.ch")
        String workflowTokenId,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param username
     * @param password
     * @param workflowTokenId
     * @return
     *     returns no.nav.WorkflowToken
     */
    @WebMethod
    @WebResult(name = "getWorkflowTokenForIdReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "getWorkflowTokenForId", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowTokenForId")
    @ResponseWrapper(localName = "getWorkflowTokenForIdResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowTokenForIdResponse")
    public WorkflowToken getWorkflowTokenForId(
        @WebParam(name = "workflowTokenId", targetNamespace = "http://webservice.vso.dunes.ch")
        String workflowTokenId,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param username
     * @param password
     * @param workflowTokenIds
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(name = "getWorkflowTokenStatusReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "getWorkflowTokenStatus", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowTokenStatus")
    @ResponseWrapper(localName = "getWorkflowTokenStatusResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowTokenStatusResponse")
    public List<String> getWorkflowTokenStatus(
        @WebParam(name = "workflowTokenIds", targetNamespace = "http://webservice.vso.dunes.ch")
        List<String> workflowTokenIds,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param username
     * @param password
     * @param workflowTokenId
     * @return
     *     returns no.nav.WorkflowInput
     */
    @WebMethod
    @WebResult(name = "getWorkflowInputForWorkflowTokenIdReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "getWorkflowInputForWorkflowTokenId", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowInputForWorkflowTokenId")
    @ResponseWrapper(localName = "getWorkflowInputForWorkflowTokenIdResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowInputForWorkflowTokenIdResponse")
    public WorkflowInput getWorkflowInputForWorkflowTokenId(
        @WebParam(name = "workflowTokenId", targetNamespace = "http://webservice.vso.dunes.ch")
        String workflowTokenId,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param username
     * @param answerInputs
     * @param password
     * @param workflowTokenId
     */
    @WebMethod
    @RequestWrapper(localName = "answerWorkflowInput", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.AnswerWorkflowInput")
    @ResponseWrapper(localName = "answerWorkflowInputResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.AnswerWorkflowInputResponse")
    public void answerWorkflowInput(
        @WebParam(name = "workflowTokenId", targetNamespace = "http://webservice.vso.dunes.ch")
        String workflowTokenId,
        @WebParam(name = "answerInputs", targetNamespace = "http://webservice.vso.dunes.ch")
        List<WorkflowTokenAttribute> answerInputs,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param taskId
     * @param username
     * @param right
     * @param password
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "hasRightsReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "hasRights", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.HasRights")
    @ResponseWrapper(localName = "hasRightsResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.HasRightsResponse")
    public boolean hasRights(
        @WebParam(name = "taskId", targetNamespace = "http://webservice.vso.dunes.ch")
        String taskId,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password,
        @WebParam(name = "right", targetNamespace = "http://webservice.vso.dunes.ch")
        int right);

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns java.util.List<no.nav.ModuleInfo>
     */
    @WebMethod
    @WebResult(name = "getAllPluginReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "getAllPlugin", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetAllPlugin")
    @ResponseWrapper(localName = "getAllPluginResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetAllPluginResponse")
    public List<ModuleInfo> getAllPlugin(
        @WebParam(name = "in0", targetNamespace = "http://webservice.vso.dunes.ch")
        String in0,
        @WebParam(name = "in1", targetNamespace = "http://webservice.vso.dunes.ch")
        String in1);

    /**
     * 
     * @param username
     * @param password
     * @return
     *     returns java.util.List<no.nav.ModuleInfo>
     */
    @WebMethod
    @WebResult(name = "getAllPluginsReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "getAllPlugins", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetAllPlugins")
    @ResponseWrapper(localName = "getAllPluginsResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetAllPluginsResponse")
    public List<ModuleInfo> getAllPlugins(
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param id
     * @param username
     * @param type
     * @param password
     * @return
     *     returns no.nav.FinderResult
     */
    @WebMethod
    @WebResult(name = "findForIdReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "findForId", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.FindForId")
    @ResponseWrapper(localName = "findForIdResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.FindForIdResponse")
    public FinderResult findForId(
        @WebParam(name = "type", targetNamespace = "http://webservice.vso.dunes.ch")
        String type,
        @WebParam(name = "id", targetNamespace = "http://webservice.vso.dunes.ch")
        String id,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param parentId
     * @param username
     * @param relationName
     * @param password
     * @param parentType
     * @return
     *     returns java.util.List<no.nav.FinderResult>
     */
    @WebMethod
    @WebResult(name = "findRelationReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "findRelation", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.FindRelation")
    @ResponseWrapper(localName = "findRelationResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.FindRelationResponse")
    public List<FinderResult> findRelation(
        @WebParam(name = "parentType", targetNamespace = "http://webservice.vso.dunes.ch")
        String parentType,
        @WebParam(name = "parentId", targetNamespace = "http://webservice.vso.dunes.ch")
        String parentId,
        @WebParam(name = "relationName", targetNamespace = "http://webservice.vso.dunes.ch")
        String relationName,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param parentId
     * @param username
     * @param relationName
     * @param password
     * @param parentType
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "hasChildrenInRelationReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "hasChildrenInRelation", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.HasChildrenInRelation")
    @ResponseWrapper(localName = "hasChildrenInRelationResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.HasChildrenInRelationResponse")
    public int hasChildrenInRelation(
        @WebParam(name = "parentType", targetNamespace = "http://webservice.vso.dunes.ch")
        String parentType,
        @WebParam(name = "parentId", targetNamespace = "http://webservice.vso.dunes.ch")
        String parentId,
        @WebParam(name = "relationName", targetNamespace = "http://webservice.vso.dunes.ch")
        String relationName,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

    /**
     * 
     * @param username
     * @param password
     * @param workflowTokenId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "getWorkflowTokenBusinessStateReturn", targetNamespace = "http://webservice.vso.dunes.ch")
    @RequestWrapper(localName = "getWorkflowTokenBusinessState", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowTokenBusinessState")
    @ResponseWrapper(localName = "getWorkflowTokenBusinessStateResponse", targetNamespace = "http://webservice.vso.dunes.ch", className = "no.nav.GetWorkflowTokenBusinessStateResponse")
    public String getWorkflowTokenBusinessState(
        @WebParam(name = "workflowTokenId", targetNamespace = "http://webservice.vso.dunes.ch")
        String workflowTokenId,
        @WebParam(name = "username", targetNamespace = "http://webservice.vso.dunes.ch")
        String username,
        @WebParam(name = "password", targetNamespace = "http://webservice.vso.dunes.ch")
        String password);

}
