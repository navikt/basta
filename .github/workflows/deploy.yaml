name: Build and deploy kuhr-kodeverk-api

on:
  push:
    branches:
      - master

env:
  DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/kuhr-kodeverk-api

jobs:
  build:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Cache Maven dependencies
        uses: actions/cache@preview
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name:
        uses: actions/setup-java@v1
        with:
          java-version: '8.0.x'

      - name: Compile
        run: mvn compile
      - name: Test
        run: mvn test
      - name: Package
        run: mvn package -Dmaven.test.skip

      - name: Create version
        run: echo "$(date "+%Y.%m.%d-%H.%M")-$(git rev-parse --short HEAD)" > .docker_tag

      - name: Build docker image
        run: docker build --build-arg version=$(cat .docker_tag) --tag ${DOCKER_IMAGE}:$(cat .docker_tag) .
      - name: Login to Github package registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run : docker login docker.pkg.github.com -u ${{ github.repository }} -p ${GITHUB_TOKEN}
      - name: Push docker image
        run: docker push ${DOCKER_IMAGE}:$(cat .docker_tag)
      - name: Git tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git tag $(cat .docker_tag) && git push https://${{ github.action }}:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git $(cat .docker_tag)

      - name: Set IMAGE env
        run: echo ::set-env name=IMAGE::${DOCKER_IMAGE}:$(cat .docker_tag)
      - name: print
        run: echo ${IMAGE}
      - name: Deploy to dev-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais/naiserator.yml
          VARS: nais/dev-config.json