def mvnHome, mvn, nodeHome, npm, node, gulp, protractor // tools
def committer, committerEmail, lastcommit, releaseVersion // metadata
def application = "basta"

pipeline {
    agent label: ""

    stages {
        stage("checkout") {
            git url: "ssh://git@stash.devillo.no:7999/aura/${application}.git"
        }

        stage("initialize") {
            script {
                mvnHome = tool "maven-3.3.9"
                mvn = "${mvnHome}/bin/mvn"
                nodeHome = tool "nodejs-6.6.0"
                npm = "${nodeHome}/bin/npm"
                node = "${nodeHome}/bin/node"
                gulp = "${node} ./node_modules/gulp/bin/gulp.js"
                protractor = "./node_modules/protractor/bin/protractor"

                def pom = readMavenPom file: 'pom.xml'
                releaseVersion = pom.version

                committer = sh(script: 'git log -1 --pretty=format:"%ae (%an)"', returnStdout: true).trim()
                committerEmail = sh(script: 'git log -1 --pretty=format:"%ae"', returnStdout: true).trim()
                lastcommit = sh(script: 'git log -1 --pretty=format:"%ae (%an) %h %s" --no-merges', returnStdout: true).trim()
            }
        }



        stage("build and test frontend") {
            dir("war") {
                withEnv(['HTTP_PROXY=http://webproxy-utvikler.nav.no:8088', 'NO_PROXY=adeo.no']) {
                    sh "${npm} install"
                    sh "${gulp} dist"
                }
            }
        }

		stage("publish artifact") {
            sh "${mvn} clean install -DskipTests -B -e"


        }
		
		stage("deploy to test") {
            withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'srvauraautodeploy', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
                sh "${mvn} aura:deploy -Dapps=${application}:${releaseVersion} -Denv=u1 -Dusername=${env.USERNAME} -Dpassword=${env.PASSWORD} -Dorg.slf4j.simpleLogger.log.no.nav=debug -B -Ddebug=true -e"
			}
		}
     }
}

